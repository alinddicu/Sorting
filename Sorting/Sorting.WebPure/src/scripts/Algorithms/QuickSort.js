var Algorithms;
(function (Algorithms) {
    class QuickSort extends Algorithms.SortBase {
        execute(unsortedList) {
            super.execute(unsortedList);
            this.arrayCopy = super.copy(unsortedList);
            super.addToIntermediateSorts(this.arrayCopy);
            this.quicksort(this.arrayCopy, 0, this.arrayCopy.length - 1);
            this.stopWatch();
            return this.arrayCopy;
        }
        quicksort(array, lo, hi) {
            if (lo < hi) {
                const pivot = this.partition(array, lo, hi);
                this.quicksort(array, lo, pivot - 1);
                this.quicksort(array, pivot + 1, hi);
            }
        }
        partition(array, lo, hi) {
            const pivot = array[hi];
            let i = lo - 1;
            for (let j = lo; j <= hi - 1; j++) {
                if (array[j] <= pivot) {
                    i++;
                    this.swap(array, i, j);
                }
            }
            this.swap(array, i + 1, hi);
            this.addToIntermediateSorts(this.arrayCopy);
            return i + 1;
        }
        swap(array, i, j) {
            const temp = array[j];
            array[j] = array[i];
            array[i] = temp;
        }
    }
    Algorithms.QuickSort = QuickSort;
})(Algorithms || (Algorithms = {}));
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiUXVpY2tTb3J0LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiUXVpY2tTb3J0LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLElBQVUsVUFBVSxDQTJDbkI7QUEzQ0QsV0FBVSxVQUFVO0lBQ25CLGVBQXVCLFNBQVEsV0FBQSxRQUFRO1FBRS9CLE9BQU8sQ0FBQyxZQUFzQjtZQUNwQyxLQUFLLENBQUMsT0FBTyxDQUFDLFlBQVksQ0FBQyxDQUFDO1lBQzVCLElBQUksQ0FBQyxTQUFTLEdBQUcsS0FBSyxDQUFDLElBQUksQ0FBQyxZQUFZLENBQUMsQ0FBQztZQUMxQyxLQUFLLENBQUMsc0JBQXNCLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxDQUFDO1lBRTdDLElBQUksQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLFNBQVMsRUFBRSxDQUFDLEVBQUUsSUFBSSxDQUFDLFNBQVMsQ0FBQyxNQUFNLEdBQUcsQ0FBQyxDQUFDLENBQUM7WUFFN0QsSUFBSSxDQUFDLFNBQVMsRUFBRSxDQUFDO1lBQ2pCLE1BQU0sQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDO1FBQ3ZCLENBQUM7UUFFTyxTQUFTLENBQUMsS0FBZSxFQUFFLEVBQVUsRUFBRSxFQUFVO1lBQ3hELEVBQUUsQ0FBQyxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsQ0FBQyxDQUFDO2dCQUNiLE1BQU0sS0FBSyxHQUFHLElBQUksQ0FBQyxTQUFTLENBQUMsS0FBSyxFQUFFLEVBQUUsRUFBRSxFQUFFLENBQUMsQ0FBQztnQkFDNUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxLQUFLLEVBQUUsRUFBRSxFQUFFLEtBQUssR0FBRyxDQUFDLENBQUMsQ0FBQztnQkFDckMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxLQUFLLEVBQUUsS0FBSyxHQUFHLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQztZQUN0QyxDQUFDO1FBQ0YsQ0FBQztRQUVPLFNBQVMsQ0FBQyxLQUFlLEVBQUUsRUFBVSxFQUFFLEVBQVU7WUFDeEQsTUFBTSxLQUFLLEdBQUcsS0FBSyxDQUFDLEVBQUUsQ0FBQyxDQUFDO1lBQ3hCLElBQUksQ0FBQyxHQUFHLEVBQUUsR0FBRyxDQUFDLENBQUM7WUFDZixHQUFHLENBQUMsQ0FBQyxJQUFJLENBQUMsR0FBRyxFQUFFLEVBQUUsQ0FBQyxJQUFJLEVBQUUsR0FBRyxDQUFDLEVBQUUsQ0FBQyxFQUFFLEVBQUUsQ0FBQztnQkFDbkMsRUFBRSxDQUFDLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxJQUFJLEtBQUssQ0FBQyxDQUFDLENBQUM7b0JBQ3ZCLENBQUMsRUFBRSxDQUFDO29CQUNKLElBQUksQ0FBQyxJQUFJLENBQUMsS0FBSyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQztnQkFDeEIsQ0FBQztZQUNGLENBQUM7WUFFRCxJQUFJLENBQUMsSUFBSSxDQUFDLEtBQUssRUFBRSxDQUFDLEdBQUcsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDO1lBQzVCLElBQUksQ0FBQyxzQkFBc0IsQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLENBQUM7WUFDNUMsTUFBTSxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUM7UUFDZCxDQUFDO1FBRU8sSUFBSSxDQUFDLEtBQWUsRUFBRSxDQUFTLEVBQUUsQ0FBUztZQUNqRCxNQUFNLElBQUksR0FBRyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUM7WUFDdEIsS0FBSyxDQUFDLENBQUMsQ0FBQyxHQUFHLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQztZQUNwQixLQUFLLENBQUMsQ0FBQyxDQUFDLEdBQUcsSUFBSSxDQUFDO1FBQ2pCLENBQUM7S0FDRDtJQXpDWSxvQkFBUyxZQXlDckIsQ0FBQTtBQUNGLENBQUMsRUEzQ1MsVUFBVSxLQUFWLFVBQVUsUUEyQ25CIiwic291cmNlc0NvbnRlbnQiOlsibmFtZXNwYWNlIEFsZ29yaXRobXMge1xyXG5cdGV4cG9ydCBjbGFzcyBRdWlja1NvcnQgZXh0ZW5kcyBTb3J0QmFzZSB7XHJcblx0XHRwcml2YXRlIGFycmF5Q29weTogbnVtYmVyW107XHJcblx0XHRwdWJsaWMgZXhlY3V0ZSh1bnNvcnRlZExpc3Q6IG51bWJlcltdKTogbnVtYmVyW10ge1xyXG5cdFx0XHRzdXBlci5leGVjdXRlKHVuc29ydGVkTGlzdCk7XHJcblx0XHRcdHRoaXMuYXJyYXlDb3B5ID0gc3VwZXIuY29weSh1bnNvcnRlZExpc3QpO1xyXG5cdFx0XHRzdXBlci5hZGRUb0ludGVybWVkaWF0ZVNvcnRzKHRoaXMuYXJyYXlDb3B5KTtcclxuXHJcblx0XHRcdHRoaXMucXVpY2tzb3J0KHRoaXMuYXJyYXlDb3B5LCAwLCB0aGlzLmFycmF5Q29weS5sZW5ndGggLSAxKTtcclxuXHJcblx0XHRcdHRoaXMuc3RvcFdhdGNoKCk7XHJcblx0XHRcdHJldHVybiB0aGlzLmFycmF5Q29weTtcclxuXHRcdH1cclxuXHJcblx0XHRwcml2YXRlIHF1aWNrc29ydChhcnJheTogbnVtYmVyW10sIGxvOiBudW1iZXIsIGhpOiBudW1iZXIpOiB2b2lkIHtcclxuXHRcdFx0aWYgKGxvIDwgaGkpIHtcclxuXHRcdFx0XHRjb25zdCBwaXZvdCA9IHRoaXMucGFydGl0aW9uKGFycmF5LCBsbywgaGkpO1xyXG5cdFx0XHRcdHRoaXMucXVpY2tzb3J0KGFycmF5LCBsbywgcGl2b3QgLSAxKTtcclxuXHRcdFx0XHR0aGlzLnF1aWNrc29ydChhcnJheSwgcGl2b3QgKyAxLCBoaSk7XHJcblx0XHRcdH1cclxuXHRcdH1cclxuXHJcblx0XHRwcml2YXRlIHBhcnRpdGlvbihhcnJheTogbnVtYmVyW10sIGxvOiBudW1iZXIsIGhpOiBudW1iZXIpOiBudW1iZXIge1xyXG5cdFx0XHRjb25zdCBwaXZvdCA9IGFycmF5W2hpXTtcclxuXHRcdFx0bGV0IGkgPSBsbyAtIDE7XHJcblx0XHRcdGZvciAobGV0IGogPSBsbzsgaiA8PSBoaSAtIDE7IGorKykge1xyXG5cdFx0XHRcdGlmIChhcnJheVtqXSA8PSBwaXZvdCkge1xyXG5cdFx0XHRcdFx0aSsrO1xyXG5cdFx0XHRcdFx0dGhpcy5zd2FwKGFycmF5LCBpLCBqKTtcclxuXHRcdFx0XHR9XHJcblx0XHRcdH1cclxuXHJcblx0XHRcdHRoaXMuc3dhcChhcnJheSwgaSArIDEsIGhpKTtcclxuXHRcdFx0dGhpcy5hZGRUb0ludGVybWVkaWF0ZVNvcnRzKHRoaXMuYXJyYXlDb3B5KTtcclxuXHRcdFx0cmV0dXJuIGkgKyAxO1xyXG5cdFx0fVxyXG5cclxuXHRcdHByaXZhdGUgc3dhcChhcnJheTogbnVtYmVyW10sIGk6IG51bWJlciwgajogbnVtYmVyKTogdm9pZCB7XHJcblx0XHRcdGNvbnN0IHRlbXAgPSBhcnJheVtqXTtcclxuXHRcdFx0YXJyYXlbal0gPSBhcnJheVtpXTtcclxuXHRcdFx0YXJyYXlbaV0gPSB0ZW1wO1xyXG5cdFx0fVxyXG5cdH1cclxufSJdfQ==